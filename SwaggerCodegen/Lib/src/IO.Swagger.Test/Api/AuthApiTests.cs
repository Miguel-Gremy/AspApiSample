/* 
 * AspApiSample.Web.API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing AuthApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AuthApiTests
    {
        private AuthApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AuthApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AuthApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AuthApi
            //Assert.IsInstanceOfType(typeof(AuthApi), instance, "instance is a AuthApi");
        }

        /// <summary>
        /// Test ApiAuthChangePasswordPut
        /// </summary>
        [Test]
        public void ApiAuthChangePasswordPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserPasswordChangeResource body = null;
            //instance.ApiAuthChangePasswordPut(body);
            
        }
        /// <summary>
        /// Test ApiAuthForgotPasswordPost
        /// </summary>
        [Test]
        public void ApiAuthForgotPasswordPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserPasswordForgotResource body = null;
            //var response = instance.ApiAuthForgotPasswordPost(body);
            //Assert.IsInstanceOf<UserForgotPasswordResponse> (response, "response is UserForgotPasswordResponse");
        }
        /// <summary>
        /// Test ApiAuthResetPasswordPost
        /// </summary>
        [Test]
        public void ApiAuthResetPasswordPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserPasswordResetResource body = null;
            //instance.ApiAuthResetPasswordPost(body);
            
        }
        /// <summary>
        /// Test ApiAuthSignInPost
        /// </summary>
        [Test]
        public void ApiAuthSignInPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserSignInResource body = null;
            //var response = instance.ApiAuthSignInPost(body);
            //Assert.IsInstanceOf<UserSignInResponse> (response, "response is UserSignInResponse");
        }
        /// <summary>
        /// Test ApiAuthSignUpConfirmGet
        /// </summary>
        [Test]
        public void ApiAuthSignUpConfirmGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string token = null;
            //string email = null;
            //instance.ApiAuthSignUpConfirmGet(token, email);
            
        }
        /// <summary>
        /// Test ApiAuthSignUpPost
        /// </summary>
        [Test]
        public void ApiAuthSignUpPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserSignUpResource body = null;
            //var response = instance.ApiAuthSignUpPost(body);
            //Assert.IsInstanceOf<UserSignUpResponse> (response, "response is UserSignUpResponse");
        }
    }

}
